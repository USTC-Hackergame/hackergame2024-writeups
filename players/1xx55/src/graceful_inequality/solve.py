import sympy
from pwn import *
x = sympy.Symbol('x')
a,b,c = sympy.symbols('a,b,c')
n = 78
'''
# https://zhuanlan.zhihu.com/p/669285539
# n = 100
f = f"(x**{n}*(1-x)**{n}*(1+0*x+0*x**2))/(1+x**2)"
f = sympy.parsing.sympy_parser.parse_expr(f)
f.free_symbols <= {x}, f.free_symbols
res = sympy.integrate(f,(x,0,1))
print(res)
'''
# n = 50 能坚持27轮
# a = 1
# -10394664345492876473099759507866034364232825441/893850964483493296981202678657850045600 + 16777216*log(2)
# b = 1
# 35334271775388126244397480038801982508987480857/1340776446725239945471804017986775068400 - 8388608*pi
# c = 1
# 40944582856896440427539952701484309361058621495999/3520878949100480096808957351233271329618400 - 16777216*log(2)

# n = 98 第20轮超了长度
# a = 1
# -839313176115389380950100774057220097444113572621573644337728238792337815506794055043099369507359289/4301884917390585728636402402811537477136882161890126192240989489544601408829393032000 + 281474976710656*log(2)
# b = 1
# 52834299804663593201868066535824670614783231302372042835620273835674080154126614121443567777603747/119496803260849603573233400078098263253802282274725727562249708042905594689705362000 - 140737488355328*pi
# c = 1
# 165344695694731708047169852489272359196490373806450007934532463042090549655590954925391951762865162021/847471328725945388541371273353872882995965785892354859871474929440286477539390427304000 - 281474976710656*log(2)

# n = 78 第一次刚好卡第40轮 第二次过了
# a = 1
# 2550061106995137631976969274315728586969500974297264997061570996998918566591/13383980378514771933336080032002124880230698703723978719059454000 - 274877906944*log(2)
# b = 1
# -617592116366255342908562275953629730690505430695654160579958174115814463697/1430349048085548145547367331664349223841448716428516809670476000 + 137438953472*pi
# c = 1
# -180994391409691052540860839090221242384363315083485806753464895657590759271/949947974424420973568609658690928393397929338374622359354581500 + 274877906944*log(2)


def solving_constriant(p,q):
    
    # log2
    eq1 = sympy.Eq(a - c, 0)
    eq2 = sympy.Eq(b*137438953472, 1)
    eq3 = sympy.Eq((a*2550061106995137631976969274315728586969500974297264997061570996998918566591/13383980378514771933336080032002124880230698703723978719059454000-b*617592116366255342908562275953629730690505430695654160579958174115814463697/1430349048085548145547367331664349223841448716428516809670476000-c*180994391409691052540860839090221242384363315083485806753464895657590759271/949947974424420973568609658690928393397929338374622359354581500)*q ,-p) 
    sol = sympy.solve((eq1, eq2, eq3), (a,b,c)) 

    f = f"(x**{n}*(1-x)**{n}*(({str(sol[a])})+({str(sol[b])})*x+({str(sol[c])})*x**2))/(1+x**2)"
    #f = sympy.parsing.sympy_parser.parse_expr(f)
    #f.free_symbols <= {x}, f.free_symbols
    #res = sympy.integrate(f,(x,0,1))
    #print("myres:" ,res) 
    # return sol
    return f

# token = 'your_token'

p = remote('202.38.93.141', 14514)
p.sendlineafter(b': ', token.encode())
i = 1
while 1:
    q1 = p.recvline()
    print("q1:",q1)
    num = p.recvline().decode().strip().split('>=')
    print("num:",num)
    if len(num) < 2:
        print("ln:",p.recvline())
        num = p.recvline().decode().strip().split('>=') 
        print("after:" ,num)   
    num = num[1]
    if '/' in num:
        p1 , q1 = map(int,num.split('/')) 
    else:
        p1 , q1 = int(num),1
    print("p:",p1, "q:",q1 , "round:",i)
    i = i+1
    ans = solving_constriant(p1,q1)
    p.sendlineafter(b'f(x):',ans.encode())

#flag{y0u_ar3_g0od_at_constructi0n_20692de8ae}
#flag{y0u_ar3_7he_Ramanujan_0f_in3quality_a2b80bdc38}